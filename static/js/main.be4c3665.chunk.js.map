{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selector.js","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactItem/ContactItem.module.css","components/App/App.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistedStore","persist","persistStore","getItems","getFilter","getVisibleItems","item","toLowerCase","includes","Container","children","className","s","container","Section","nameForClass","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleGetValue","e","currentTarget","value","Error","onSubmit","newName","preventDefault","find","addNotification","title","message","type","insert","animationIn","animationOut","dismiss","duration","onScreen","label","input","onChange","placeholder","pattern","required","button","Filter","trim","icon","ContactItem","link","href","wrapper","onClick","ContactList","list","map","App","visibleItems","header","newContactWrapper","newContactTitle","titleContacts","text","render","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.be4c3665.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Filter_icon__3-e8b\",\"label\":\"Filter_label__10yHT\",\"input\":\"Filter_input__3ssqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1E9UC\",\"item\":\"ContactList_item__3hbQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-contact\":\"Section_new-contact__36rE4\",\"section\":\"Section_section__8qxeg\",\"sectionList\":\"Section_sectionList__1WP32 Section_section__8qxeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3V6rV\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst contactsActions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n\r\nexport default contactsActions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [contactsActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import {\r\n  configureStore,\r\n  //   combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(contactsPersistConfig, contactsReducer),\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persist = persistStore(store);\r\n\r\nconst persistedStore = { store, persist };\r\n\r\nexport default persistedStore;\r\n","export const getItems = state => state.items;\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getVisibleItems = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  return items.filter(\r\n    item =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n      item.number.includes(filter),\r\n  );\r\n};\r\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport Container from '../Container';\n\nconst Section = ({ nameForClass, children }) => (\n  <section className={s[`${nameForClass}`]}>\n    <Container>{children}</Container>\n  </section>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  nameForClass: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItems } from '../../redux/contacts/contacts-selector';\nimport { store } from 'react-notifications-component';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleGetValue = e => {\n    const field = e.currentTarget.name;\n\n    switch (field) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        throw new Error();\n    }\n  };\n\n  const showNotification = () => {\n    store.addNotification({\n      title: 'Oops!',\n      message:\n        'But there’s already a contact with that name on your contact list',\n      type: 'danger',\n      insert: 'top',\n      container: 'top-right',\n      animationIn: ['animate__animated', 'animate__fadeIn'],\n      animationOut: ['animate__animated', 'animate__fadeOut'],\n      dismiss: {\n        duration: 3000,\n        onScreen: true,\n      },\n    });\n  };\n\n  const repeatCheck = newName => {\n    return items.find(({ name }) => name === newName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (repeatCheck(name)) {\n      showNotification();\n      return;\n    }\n\n    dispatch(contactsActions.addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleGetValue}\n          placeholder=\"Elon Reeve Musk\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleGetValue}\n          placeholder=\"1-800-613-8840\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\" aria-label=\"button-submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import contactsActions from '../../redux/contacts/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selector';\nimport { GoSearch } from 'react-icons/go';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const handleFilterValue = e =>\n    dispatch(contactsActions.changeFilter(e.currentTarget.value.trim()));\n\n  return (\n    <label className={s.label}>\n      <input\n        className={s.input}\n        placeholder=\"Enter to search...\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <GoSearch className={s.icon} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { FiPhoneCall } from 'react-icons/fi';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <a className={s.link} href=\"tel:{number}\">\n        <p className={s.name}>{name}</p>\n        <div className={s.wrapper}>\n          <FiPhoneCall className={s.icon} />\n          <p className={s.number}>{number}</p>\n        </div>\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => dispatch(contactsActions.deleteContact(id))}\n        aria-label=\"delete contact\"\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// import PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\nimport { getVisibleItems } from '../../redux/contacts/contacts-selector';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(getVisibleItems);\n\n  return (\n    <ul className={s.list}>\n      {items.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <ContactItem id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { useSelector } from 'react-redux';\nimport { getVisibleItems } from '../../redux/contacts/contacts-selector';\nimport Section from '../Section';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nimport s from './App.module.css';\n\nconst App = () => {\n  const visibleItems = useSelector(getVisibleItems);\n\n  return (\n    <>\n      <ReactNotification />\n      <header className={s.header}>\n        <Container>\n          <h1 className={s.title}>My phonebook</h1>\n        </Container>\n      </header>\n      <Section nameForClass={'section'}>\n        <div className={s.newContactWrapper}>\n          <h2 className={s.newContactTitle}>A new contact</h2>\n          <ContactForm />\n        </div>\n      </Section>\n      <Section nameForClass={'sectionList'}>\n        <h2 className={s.titleContacts}>Contacts</h2>\n        <Filter />\n        {visibleItems[0] ? (\n          <ContactList />\n        ) : (\n          <p className={s.text}>There’s nothing here yet...</p>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport persistedStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nrender(\n  <StrictMode>\n    <Provider store={persistedStore.store}>\n      <PersistGate loading={null} persistor={persistedStore.persist}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ContactItem_link__26Q_q\",\"name\":\"ContactItem_name__1-dBv\",\"wrapper\":\"ContactItem_wrapper__1dSz5\",\"icon\":\"ContactItem_icon__34wqy\",\"number\":\"ContactItem_number__1vhr1\",\"button\":\"ContactItem_button__1HlXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__17BD5\",\"title\":\"App_title__2bsaD\",\"newContactWrapper\":\"App_newContactWrapper__3bCHT\",\"newContactTitle\":\"App_newContactTitle__k_BMJ\",\"titleContacts\":\"App_titleContacts__1ecre\",\"text\":\"App_text__3odGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3Zita\",\"input\":\"ContactForm_input__-BRA7\",\"button\":\"ContactForm_button__2GeVa\"};"],"sourceRoot":""}